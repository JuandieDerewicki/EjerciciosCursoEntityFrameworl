// <auto-generated />
using System;
using CursoEntityFrameworkPractica;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CursoEntityFrameworkPractica.Migrations
{
    [DbContext(typeof(TareasContext))]
    [Migration("20230724234149_InitialData2")]
    partial class InitialData2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CursoEntityFrameworkPractica.Categoria", b =>
                {
                    b.Property<Guid>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria", (string)null);

                    b.HasData(
                        new
                        {
                            CategoriaId = new Guid("10bf5d9f-710f-41a6-9d8c-97aef3ad718f"),
                            Nombre = "Actividades pendientes",
                            Peso = 20
                        },
                        new
                        {
                            CategoriaId = new Guid("10bf5d9f-710f-41a6-9d8c-97aef3ad7102"),
                            Nombre = "Actividades personales",
                            Peso = 50
                        });
                });

            modelBuilder.Entity("CursoEntityFrameworkPractica.Tarea", b =>
                {
                    b.Property<Guid>("TareaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrioridadTarea")
                        .HasColumnType("int");

                    b.Property<string>("Resumen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TareaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Tarea", (string)null);

                    b.HasData(
                        new
                        {
                            TareaId = new Guid("10bf5d9f-710f-41a6-9d8c-97aef3ad7110"),
                            CategoriaId = new Guid("10bf5d9f-710f-41a6-9d8c-97aef3ad718f"),
                            FechaCreacion = new DateTime(2023, 7, 24, 20, 41, 49, 296, DateTimeKind.Local).AddTicks(8509),
                            PrioridadTarea = 1,
                            Resumen = "Resumen tarea 1",
                            Titulo = "Pago de servicios publicos"
                        },
                        new
                        {
                            TareaId = new Guid("10bf5d9f-710f-41a6-9d8c-97aef3ad7111"),
                            CategoriaId = new Guid("10bf5d9f-710f-41a6-9d8c-97aef3ad7102"),
                            FechaCreacion = new DateTime(2023, 7, 24, 20, 41, 49, 296, DateTimeKind.Local).AddTicks(8522),
                            PrioridadTarea = 0,
                            Resumen = "Resumen tarea 2",
                            Titulo = "Terminar de ver pelicula en Netflix"
                        });
                });

            modelBuilder.Entity("CursoEntityFrameworkPractica.Tarea", b =>
                {
                    b.HasOne("CursoEntityFrameworkPractica.Categoria", "Categoria")
                        .WithMany("Tareas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("CursoEntityFrameworkPractica.Categoria", b =>
                {
                    b.Navigation("Tareas");
                });
#pragma warning restore 612, 618
        }
    }
}
